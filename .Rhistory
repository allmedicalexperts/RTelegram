x <- cbind(x = runif(50*5, -1, 1), id = rep(1:50, 5))
eta <- t(x$x)*2+ z%*%b
eta <- x$x*2+ z%*%b
x <- cbind(x = runif(50*5, -1, 1), id = rep(1:50, 5))
eta <- x$x*2+ z%*%b
head(x)
eta <- x[,1]*2+ z%*%b
eta
y <- epx(eta)/1+exp(eta)
y <- exp(eta)/1+exp(eta)
y
data <- cbind(y, x)
head(data)
data <- cbind(y = y, x)
head(y)
x <- cbind(x = runif(50*5, -1, 1), id = rep(1:50, 5))
x[order(x$id),]
x[order(x[,2]),]
x <- cbind(x = runif(50*5, -1, 1), id = rep(1:50, 5))
x <- x[order(x[,2]),]
z <- kronecker(rep(1,5), diag(50))
b <- rep(rnorm(50))
eta <- x[,1]*2+ z%*%b
y <- exp(eta)/1+exp(eta)
data <- cbind(y = y, x)
head(data)
data <- data.frame(y = y, x)
head(data)
head(data)
simulate <- function(m = 50, n = 5, beta =2) {
x <- cbind(x = runif(m*n, -1, 1), id = rep(1:m, n))
x <- x[order(x[,2]),]
z <- kronecker(rep(1,n), diag(m))
b <- rep(rnorm(m))
eta <- x[,1]*2+ z%*%b
y <- exp(eta)/1+exp(eta)
data.frame(y = y, x)
}
simulate <- function(m = 50, n = 5, beta =2) {
x <- cbind(x = runif(m*n, -1, 1), id = rep(1:m, n))
x <- x[order(x[,2]),]
z <- kronecker(rep(1,n), diag(m))
b <- rep(rnorm(m))
eta <- x[,1]*beta+ z%*%b
y <- exp(eta)/1+exp(eta)
data.frame(y = y, x)
}
simulate()
summary(simulate())
summary(simulate(20,20,5))
summary(simulate(20,200,5))
summary(simulate(2,200,5))
summary(simulate(200,22,5))
simulate <- function(m = 50, n = 5, beta =2) {
x <- cbind(x = runif(m*n, -1, 1), id = rep(1:m, n))
x <- x[order(x[,2]),]
z <- kronecker(rep(1,n), diag(m))
b <- rep(rnorm(m))
eta <- x[,1]*beta+ z%*%b
y <- exp(eta)/(1+exp(eta))
data.frame(y = y, x)
}
summary(simulate(200,22,5))
summary(simulate(2,200,5))
m = 50
n = 5
beta = 2
x <- cbind(x = runif(m*n, -1, 1), id = rep(1:m, n))
x <- x[order(x[,2]),]
z <- kronecker(rep(1,n), diag(m))
b <- rep(rnorm(m))
eta <- x[,1]*beta+ z%*%b
pi <- exp(eta)/(1+exp(eta))
rbinom(1,1,pi)
rbinom(2,1, c(1,0))
rbinom(2,1, c(1,0))
rbinom(2,1, c(1,0))
rbinom(2,1, c(1,0))
rbinom(2,1, c(1,0))
rbinom(2,1, c(1,0))
rbinom(2,1, c(1,0))
rbinom(2,1, c(1,0))
rbinom(2,1, c(1,0))
rbinom(2,1, c(1,0))
rbinom(2,1, c(1,0))
rbinom(2,1, c(1,0))
rbinom(2,1, c(1,0))
simulate <- function(m = 50, n = 5, beta =2) {
x <- cbind(x = runif(m*n, -1, 1), id = rep(1:m, n))
x <- x[order(x[,2]),]
z <- kronecker(rep(1,n), diag(m))
b <- rep(rnorm(m))
eta <- x[,1]*beta+ z%*%b
y <- binom(n*m,1,exp(eta)/(1+exp(eta)))
data.frame(y = y, x)
}
simulate()
simulate <- function(m = 50, n = 5, beta =2) {
x <- cbind(x = runif(m*n, -1, 1), id = rep(1:m, n))
x <- x[order(x[,2]),]
z <- kronecker(rep(1,n), diag(m))
b <- rep(rnorm(m))
eta <- x[,1]*beta+ z%*%b
y <- rbinom(n*m,1,exp(eta)/(1+exp(eta)))
data.frame(y = y, x)
}
simulate()
data <- simulate()
library(MASS)
glmmPQL(y~x, random = ~1|id)
glmmPQL(y~x, random = ~1|id, family = binomial())
glmmPQL(y~x, random = ~1|id, data ? = data, family = binomial())
glmmPQL(y~x, random = ~1|id, data = data, family = binomial())
library(lme4)
glmer(y~x+(1|id), data = data, family = binomial())
glmer(y~x+(1|id), data = data, family = binomial(), nAGQ = 5)
glmmPQL(y~-1 + x, random = ~1|id, data = data, family = binomial())
glmer(y~-1 + x+(1|id), data = data, family = binomial())
glmer(y~-1 + x+(1|id), data = data, family = binomial(), nAGQ = 5)
simulate <- function(m = 50, n = 5, beta =2) {
x <- cbind(x = runif(m*n, -1, 1), id = rep(1:m, n))
x <- x[order(x[,2]),]
z <- kronecker(rep(1,n), diag(m))
b <- rep(rnorm(m))
eta <- x[,1]*beta+ z%*%b
y <- rbinom(n*m,1,(1+exp(eta))/exp(eta)/)
data.frame(y = y, x)
}
data <- simulate()
head(data)
glmmPQL(y~-1 + x, random = ~1|id, data = data, family = binomial())
glmer(y~-1 + x+(1|id), data = data, family = binomial())
glmer(y~-1 + x+(1|id), data = data, family = binomial(), nAGQ = 5)
z <- kronecker(rep(1,n), diag(m))
head(z)
simulate <- function(m = 50, n = 5, beta =2) {
x <- cbind(x = runif(m*n, -1, 1), id = rep(1:m, n))
x <- x[order(x[,2]),]
z <- kronecker(rep(1,n), diag(m))
b <- rep(rnorm(m))
eta <- x[,1]*beta+ z%*%b
y <- rbinom(n*m,1, exp(eta)/(1+exp(eta)))
data.frame(y = y, x)
}
simulate <- function(m = 50, n = 5, beta =2) {
x <- cbind(x = runif(m*n, -1, 1), id = rep(1:m, n))
#x <- x[order(x[,2]),]
z <- kronecker(rep(1,n), diag(m))
b <- rep(rnorm(m))
eta <- x[,1]*beta+ z%*%b
y <- rbinom(n*m,1, exp(eta)/(1+exp(eta)))
data.frame(y = y, x)
}
data <- simulate()
glmmPQL(y~-1 + x, random = ~1|id, data = data, family = binomial())
glmer(y~-1 + x+(1|id), data = data, family = binomial())
glmer(y~-1 + x+(1|id), data = data, family = binomial(), nAGQ = 5)
glmer(y~-1 + x+(1|id), data = data, family = binomial(), nAGQ = 5)
glmmPQL(y~-1 + x, random = ~1|id, data = data, family = binomial())
glmer(y~-1 + x+(1|id), data = data, family = binomial())
glmer(y~-1 + x+(1|id), data = data, family = binomial(), nAGQ = 5)
data <- simulate()
glmmPQL(y~-1 + x, random = ~1|id, data = data, family = binomial())
glmer(y~-1 + x+(1|id), data = data, family = binomial())
glmer(y~-1 + x+(1|id), data = data, family = binomial(), nAGQ = 5)
data <- simulate()
glmmPQL(y~-1 + x, random = ~1|id, data = data, family = binomial())
glmer(y~-1 + x+(1|id), data = data, family = binomial())
glmer(y~-1 + x+(1|id), data = data, family = binomial(), nAGQ = 5)
data <- simulate(500, 20)
glmmPQL(y~-1 + x, random = ~1|id, data = data, family = binomial())
glmer(y~-1 + x+(1|id), data = data, family = binomial())
glmer(y~-1 + x+(1|id), data = data, family = binomial(), nAGQ = 5)
fixef(glmmPQL(y~-1 + x, random = ~1|id, data = data, family = binomial()))
fixef(glmer(y~-1 + x+(1|id), data = data, family = binomial()))
fixef(glmer(y~-1 + x+(1|id), data = data, family = binomial(), nAGQ = 5))
simulate <- function(iter, n, m){
res <- matrix(NA, ncol = 3, nrow = iter)
for(i in iter){
data = generate(m = m, n = n)
res[i, 1] <- fixef(glmmPQL(y~-1 + x, random = ~1|id, data = data, family = binomial()))
res[i, 2] <- fixef(glmer(y~-1 + x+(1|id), data = data, family = binomial()))
res[i, 3] <- fixef(glmer(y~-1 + x+(1|id), data = data, family = binomial(), nAGQ = 5))
}
res
}
generate <- function(m = 50, n = 5, beta =2) {
x <- cbind(x = runif(m*n, -1, 1), id = rep(1:m, n))
#x <- x[order(x[,2]),]
z <- kronecker(rep(1,n), diag(m))
b <- rep(rnorm(m))
eta <- x[,1]*beta+ z%*%b
y <- rbinom(n*m,1, exp(eta)/(1+exp(eta)))
data.frame(y = y, x)
}
result <- simulate(20, 5, 50)
result
debug(simulate)
result <- simulate(20, 5, 50)
head(res)
iter
result <- simulate(5, 5, 50)
res
head(data)
simulate <- function(iter, n = 5, m = 50){
res <- matrix(NA, ncol = 3, nrow = iter)
for(i in iter){
data <- generate(m = m, n = n)
res[i, 1] <- fixef(glmmPQL(y~-1 + x, random = ~1|id, data = data, family = binomial()))
res[i, 2] <- fixef(glmer(y~-1 + x+(1|id), data = data, family = binomial()))
res[i, 3] <- fixef(glmer(y~-1 + x+(1|id), data = data, family = binomial(), nAGQ = 5))
}
res
}
result <- simulate(5)
result
debugonce(simulate)
result <- simulate(5)
simulate <- function(iter, n = 5, m = 50){
res <- matrix(NA, ncol = 3, nrow = iter)
for(i in 1:iter){
data <- generate(m = m, n = n)
res[i, 1] <- fixef(glmmPQL(y~-1 + x, random = ~1|id, data = data, family = binomial()))
res[i, 2] <- fixef(glmer(y~-1 + x+(1|id), data = data, family = binomial()))
res[i, 3] <- fixef(glmer(y~-1 + x+(1|id), data = data, family = binomial(), nAGQ = 5))
}
res
}
result <- simulate(5)
result
rowMeans(result)
colMeans(result)
simulate <- function(iter, n = 5, m = 50){
res <- matrix(NA, ncol = 3, nrow = iter)
for(i in 1:iter){
data <- generate(m = m, n = n)
res[i, 1] <- fixef(glmmPQL(y~-1 + x, random = ~1|id, data = data, family = binomial()))
res[i, 2] <- fixef(glmer(y~-1 + x+(1|id), data = data, family = binomial()))
res[i, 3] <- fixef(glmer(y~-1 + x+(1|id), data = data, family = binomial(), nAGQ = 5))
}
res
}
result <- simulate(50)
colMeans(result)
result
data <- read.csv("Dokumente/dataGeeks_survey.ods")
data <- read.csv("Dokumente/dataGeeks_survey.csv")
head(data)
data <- read.csv("Dokumente/dataGeeks_survey.csv", na.strings = "0")
head(data)
data$Why <- as.factor(data$Why, levels = c(1,2,3,4,5,6) labels = c("Talks", "Beer & Pizza", "Networking", "Other", "all of the above", "Talks and Networking"))
data$Why <- as.factor(data$Why, levels = c(1,2,3,4,5,6), labels = c("Talks", "Beer & Pizza", "Networking", "Other", "all of the above", "Talks and Networking"))
data$Why <- as.factor(data$Why, labels = c("Talks", "Beer & Pizza", "Networking", "Other", "all of the above", "Talks and Networking"))
data$Why <- as.factor(data$Why, labels = c("Talks", "Beer & Pizza", "Networking", "all of the above", "Talks and Networking"))
as.factor(data$Why)
data$Why <- as.factor(data$Why, levels = c(1,2,3,5,6), labels = c("Talks", "Beer & Pizza", "Networking", "all of the above", "Talks and Networking"))
levels(data$Why) <-  c("Talks", "Beer & Pizza", "Networking", "all of the above", "Talks and Networking")
head(data)
labelsdata$Why) <-  c("Talks", "Beer & Pizza", "Networking", "all of the above", "Talks and Networking")
labels(data$Why) <-  c("Talks", "Beer & Pizza", "Networking", "all of the above", "Talks and Networking")
data$Why <- as.factor(data$Why)
levels(data$Why) <-  c("Talks", "Beer & Pizza", "Networking", "all of the above", "Talks and Networking")
head(data)
barplot(c(0,0,0.5))
barplot(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1))
plot(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1))
plot(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1), type = "h")
plot(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1), type = "h")
points(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1), pch=19)
plot(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1), type = "h")
points(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1), pch=19)
plot(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1), type = "h", xlab = "x", ylab = "F(x)")
points(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1), pch=19)
points(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1), c(0:13),pch=19)
points(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1), c(0:12),pch=19)
points(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1), c(0:11),pch=19)
0:11
points(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1), 0:11,pch=19)
plot(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1), 0:11, type = "h", xlab = "x", ylab = "F(x)")
plot(0:11,c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1),  type = "h", xlab = "x", ylab = "F(x)")
points(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1), 0:11, pch=19)
points(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1), pch=19)
plot(0:11,c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1),  type = "h", xlab = "x", ylab = "F(x)")
points(c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1), pch=19)
plot(0:11,c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1),  type = "h", xlab = "x", ylab = "F(x)")
points(0:11, c(0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1), pch=19)
plot(-1:11,c(0,0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1),  type = "h", xlab = "x", ylab = "F(x)")
points(-1:11, c(0,0,0,0.4,0.4,0.4,0.9,0.9,1,1,1,1,1), pch=19)
plot(-1:11,c(0,0,0,0.4,0.4,0.9,0.9,1,1,1,1,1),  type = "h", xlab = "x", ylab = "F(x)")
points(-1:11, c(0,0,0,0.4,0.4,0.9,0.9,1,1,1,1,1), pch=19)
plot(-1:10,c(0,0,0,0.4,0.4,0.9,0.9,1,1,1,1,1),  type = "h", xlab = "x", ylab = "F(x)")
points(-1:10, c(0,0,0,0.4,0.4,0.9,0.9,1,1,1,1,1), pch=19)
read_data_frames <- function(...){
frames <- as.list(...)
for(frame in frames){
head(frame)
}
}
data("AirPassengers")
AirPassengers
data("Puromycin")
Puromycin
read_data_frames(Puromycin)
list(a,b,c)
list(1,2,3)
seq_len(list(1,2,3))
seq_along(list(1,2,3))
read_data_frames <- function(...){
frames <- as.list(...)
for(i in seq_along(frames)){
head(frames[[i]])
}
}
read_data_frames(Puromycin)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
debug(read_data_frames)
read_data_frames(Puromycin, Puromycin)
frames
str(frames)
Puromycin
str(Puromycin9
)
str(Puromycin)
read_data_frames(Puromycin, Puromycin)
...
list(...)
source('~/.active-rstudio-document')
print_dfs <- function(...){
lapply(..., head)
}
print_dfs(Puromycin, Puromycin)
print_dfs <- function(...){
lapply(list(...), head)
}
print_dfs(Puromycin, Puromycin)
install.packages("dplyr")
library(magrittr)
create_awesome_object <- function(a,b,c){
awesome_object <- list(a,b,c)
value_to_change <- 1:20
attr(awesome_object, "subset_function") <- function(i){
attr(awesome_object, "value_to_change") <<- attr(awesome_object, "value_to_change")[1:i]
}
attr(awesome_object, "value_to_change") <- value_to_change
awesome_object
}
rich_object_2 <- create_awesome_object(1,2,3)
str(rich_object_2)
attr(rich_object_2, "subset_function")
library(httr)
curl("https://api.telegram.org/bot104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0/")
POST("https://api.telegram.org/bot104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0/sendmessage",
body = list(chat_id=42672507, text = "Bla"))
library(devtools)
install.packages("devtools")
library(devtools)
install.packages("xml2")
install.packages("xml2")
install.packages("devtools")
library(devtools)
create(path = "Projekte/RTelegram/Rtelegram", rstudio = FALSE)
create(path = "Projekte/RTelegram/RTelegram", rstudio = FALSE)
getwd()
setwd("Projekte/RTelegram/RTelegram/")
install.packages("digest")
install.packages("digest")
digest
library(digest)
create_token_file <- function(token){
environment(token = token)
}
create_token_file("bla")
source('~/.active-rstudio-document')
create_token_file("bla")
a <- create_token_file("bla")
a
library(httr)
send_message <- function(message, chat_id, token){
httr::POST(url = paste0("https://api.telegram.org/", token, "/sendmessage"),
body = list(chat_id = chat_id, test = message))
}
send_message("nice", chat_id = 42672507,
token = "104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0")
chat_id = 42672507
token = "104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0"
paste0("https://api.telegram.org/bot", token, "/sendmessage")
httr::POST(url = paste0("https://api.telegram.org/bot", token, "/sendmessage"),
body = list(chat_id = chat_id, test = "message"nice))
httr::POST(url = paste0("https://api.telegram.org/bot", token, "/sendmessage"),
body = list(chat_id = chat_id, test = "nice"))
POST(url = "https://api.telegram.org/bot104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0/sendmessage",
body = list(chat_id=42672507, text = "Bla"))
send_message <- function(message, chat_id, token){
httr::POST(url = paste0("https://api.telegram.org/bot", token, "/sendmessage"),
body = list(chat_id = chat_id, text = "nice"))
}
send_message <- function(message, chat_id, token){
httr::POST(url = paste0("https://api.telegram.org/bot", token, "/sendmessage"),
body = list(chat_id = chat_id, text = "nice"))
}
send_message("nice", chat_id = 42672507,
token = "104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0")
library(RCurl)
curl("https://api.telegram.org/bot104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0/")
library(curl)
curl("https://api.telegram.org/bot104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0/")
curl("https://api.telegram.org/bot104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0/")
curl("https://api.telegram.org/bot104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0/getME")
curl("https://api.telegram.org/bot104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0/getUpdates")
GET("https://api.telegram.org/bot104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0/getUpdates")
GET("https://api.telegram.org/bot104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0/getUpdates")
x <- GET("https://api.telegram.org/bot104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0/getUpdates")
y
x
str(x)
x <- curl("https://api.telegram.org/bot104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0/getUpdates")
y
x
str(x)
deparse(x)
library(jsonlite)
x <- fromJSON("https://api.telegram.org/bot104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0/getUpdates")
x
x$result
str(x$result)
x$result$message$message_id
x$result$message$from
x$result$message$from[1]
recieve_chat_id <- function(token){
x <- fromJSON(paste0("https://api.telegram.org/bot", token, "/getUpdates"))
if(x$ok){
x$result$message$from[1]
}
else{
warning("no message found")
}
}
recieve_chat_id("104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0")
x$result$message$text
recieve_chat_id("104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0")
source('~/Projekte/RTelegram/RTelegram/R/recieve_chat_id.R')
recieve_chat_id("104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0")
recieve_chat_id("104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0")
x <- fromJSON(paste0("https://api.telegram.org/bot", token, "/getUpdates"))
x
recieve_chat_id <- function(token){
x <- fromJSON(paste0("https://api.telegram.org/bot", token, "/getUpdates"))
if(x$ok){
print(paste("message:", x$result$message$text))
x$result$message$from[NROW(x$result$message$from), ]
}
else{
warning("no message found")
}
}
recieve_chat_id("104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0")
x$result$message$date
tail(x$result$message$date, 1)
as.POSIXct(tail(x$result$message$date, 1), origin="1970-01-01")
source('~/Projekte/RTelegram/RTelegram/R/recieve_chat_id.R')
recieve_chat_id("104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0")
source('~/Projekte/RTelegram/RTelegram/R/recieve_chat_id.R')
recieve_chat_id("104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0")
is.character(123)
source('~/Projekte/RTelegram/RTelegram/R/send_message.R')
token <- recieve_chat_id("104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0")
token
id <- recieve_chat_id("104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0")
send_message("is getting better", id,
"104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0")
inherits(id, "chat_id")
source('~/Projekte/RTelegram/RTelegram/R/send_message.R')
send_message("is getting better", id,
"104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0")
x <- fromJSON(paste0("https://api.telegram.org/bot", "104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0", "/getME"))
x
x$ok
x$result$id
x$result$username
source('~/.active-rstudio-document')
b <- validate_bot("104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0")
b
source('~/Projekte/RTelegram/RTelegram/R/print.chat_bot.R')
print(b)
source('~/Projekte/RTelegram/RTelegram/R/send_message.R')
send_message("super", id, b)
send_message <- function(message, chat_id, token){
if(!(inherits(chat_id, "chat_id") | is.character(chat_id))){
error("chat_id must be a chat_id object or a character string")
}
if(!(inherits(token, "chat_bot") | is.character(chat_id))){
error("token must be a chat_bot object or a character string")
}
if(inherits(chat_id, "chat_id")){
chat_id <- chat_id$chat_id
}
if(inherits(token, "chat_bot")){
token <- token$token
}
httr::POST(url = paste0("https://api.telegram.org/bot", token,
"/sendmessage"), body = list(chat_id = chat_id,
text = message))
}
source('~/Projekte/RTelegram/RTelegram/R/send_message.R')
send_message("super", id, b)
send_message(rnorm(100), id, b)
source('~/Projekte/RTelegram/RTelegram/R/send_message.R')
send_message(rnorm(100), id, b)
send_message("rnorm(100)", id, b)
send_message("is getting better", id,
"104250037:AAE7r3xRjquDZPtPqUEiy0GmL6OXJZK90b0")
